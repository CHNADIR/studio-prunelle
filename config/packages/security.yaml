security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                target: app_home
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
            # Ne pas inclure csrf_token_generator ici

    # Hiérarchie des rôles
    role_hierarchy:
        ROLE_PHOTOGRAPHE: ROLE_USER
        ROLE_RESPONSABLE_ADMINISTRATIF: ROLE_USER
        ROLE_GESTION_REFERENTIELS: ROLE_USER
        ROLE_ADMIN: [ROLE_USER, ROLE_RESPONSABLE_ADMINISTRATIF, ROLE_PHOTOGRAPHE, ROLE_GESTION_REFERENTIELS]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN]
    
    # Une seule section access_control
    access_control:
        - { path: ^/login$, roles: PUBLIC_ACCESS }
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/ecole/new$, roles: ROLE_RESPONSABLE_ADMINISTRATIF }
        - { path: ^/ecole/\d+/edit$, roles: ROLE_RESPONSABLE_ADMINISTRATIF }
        - { path: ^/ecole$, roles: IS_AUTHENTICATED_REMEMBERED }  # Changé pour permettre l'accès à tous les utilisateurs connectés
        - { path: ^/ecole/\d+$, methods: GET, roles: IS_AUTHENTICATED_REMEMBERED } # Accès à la vue détaillée pour tous les utilisateurs connectés
        - { path: ^/prise/de/vue/new$, roles: ROLE_RESPONSABLE_ADMINISTRATIF }
        - { path: ^/prise/de/vue, roles: [ROLE_PHOTOGRAPHE, ROLE_RESPONSABLE_ADMINISTRATIF] }
        - { path: ^/admin, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
